/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
/* line 9, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
/* line 19, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
/* line 33, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
/* line 54, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
/* line 67, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
/* line 77, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
/* line 89, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
/* line 97, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
/* line 109, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
/* line 117, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
/* line 126, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
/* line 135, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
/* line 144, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
/* line 153, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
/* line 161, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

/* line 169, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
sup {
  top: -0.5em; }

/* line 173, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
/* line 184, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
/* line 192, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
/* line 203, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
/* line 211, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
/* line 221, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
/* line 229, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
/* line 252, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
/* line 266, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
/* line 277, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
/* line 290, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
/* line 302, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
/* line 311, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
/* line 322, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
/* line 334, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
/* line 346, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
/* line 357, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
/* line 370, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
/* line 379, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
/* line 390, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
/* line 399, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
/* line 408, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
/* line 419, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/* line 424, /Users/yana/Projects/safespace-website/src/css/_normalize.scss */
td,
th {
  padding: 0; }

/* line 14, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
.logo {
  background-color: #8fd400; }
  /* line 16, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  .logo p {
    margin: 0; }
  /* line 19, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  .logo img {
    width: 23%;
    margin: 24px; }

/* line 25, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
.page-wrap {
  padding: 20px 19%;
  background-color: #f9f9f9; }

/* line 30, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
h1, h2, h3 {
  color: #00abff;
  font-weight: 400; }

/* line 35, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
h1 {
  font-size: 3em;
  margin: 50px 0 0 0; }

/* line 40, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
h2 {
  font-size: 1.4em;
  line-height: 1.3em; }

/* line 45, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
h2.subhead {
  margin-top: 4px; }

/* line 49, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
h4 {
  font-size: 1.2em;
  color: #53c304;
  margin: 1em 0 0.3em 0;
  font-weight: 400; }

/* line 56, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
p, ul, li {
  font-size: 18px;
  line-height: 1.3em;
  margin-top: 0;
  font-weight: 200;
  color: #2d2d2d;
  text-rendering: optimizeLegibility; }
  /* line 64, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  p small, ul small, li small {
    line-height: 1em; }

/* line 69, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
li {
  line-height: 1.8em; }

/* line 73, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
a {
  color: #0870c6; }

/* line 77, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
.footer {
  padding: 40px 0; }
  /* line 79, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  .footer h3 {
    color: #630969;
    line-height: 1.35em; }
  /* line 83, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  .footer a {
    color: #b02289; }

@media screen and (max-width: 640px) {
  /* line 94, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  .logo p {
    padding-right: 8%;
    text-align: center; }
  /* line 99, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  .logo img {
    width: 86%; }
  /* line 104, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  .page-wrap {
    padding: 10px 7%; }
  /* line 108, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  h2, h4, p, li {
    font-weight: 100; }
  /* line 112, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  h3 {
    font-weight: 400; }
  /* line 116, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  h1 {
    font-size: 1.4em;
    line-height: 1.25em;
    margin-top: 20px; }
  /* line 122, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  h2 {
    font-size: 1.05em; }
  /* line 126, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  h2.subhead {
    font-weight: 400;
    margin-top: 2px; }
  /* line 131, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  h4, h3 {
    font-size: 0.95em; }
  /* line 135, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  p, li {
    font-size: 14px; }
  /* line 139, /Users/yana/Projects/safespace-website/src/css/app-new.scss */
  li {
    line-height: 1.4em; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
